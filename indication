commande à generer :
    -./luncher.sh => instal tous le bordel

    - ./monapp => lance l'éditeur d'image

    - exit
        > quite le programme

    - open path/imagename path/imagename path/imagename path/imagename
         > créer un objet c image contenant :
            int id
            SDL_window mafenetre
            char * path
            char * imagename (privé du .xxx )
            char * format
            image * suivant
          > ouvrir une interface graphque dans laquelle se trouve une image
          > le titre de la fenetre sera le numéro d'id suivi du nom de l'ima
          ! si l'image est déja ouverte alors ne fait rien et previent utilisateur
          ! si l'image n'exsite pas ou n'est pas ouvrable et previent utilisateur
          ! si mauvais format d'image (.xxx) alors ne fait rien et previent utilisateur

    - close id/imagename id/imagename id/imagename id/imagename
        > ferme l'interface graphique correspondant objet ayant l'id ou le imagename corespondant
        > lors de la fermeture proposer a l'utilisateur de sauvegarder le contenu de la fenetre => voir fonction save
        ! si l'id ou imagename ne correspond a rien, ne fait rien et previent utilisateur


    - close all [instant]
        > meme principe que précedement
        > option instant ferme sans demander a l'utilisteur de sauvegarder
        ! si aucune ig existant alors ne fait rien et previent utilisateur

    - save id/imagename id/imagename id/imagename id/imagename
        > propose à l'utilisateur de sauvegarde directement l'image (1) ou alors de proposer un nouveau chemim(2)
            (1) le fichier est suprimer puis recree
            (2) utilisateur doit choisir un nouveau chemin (par default le précédent)
                                        un nom d'image (par default le précédent)
                                        un type de format (par default le précédent)
        ! si l'id ou imagename ne correspond a rien, ne fait rien et previent utilisateur

    - save all [instant]
        > meme principe que précedement
        > option instant ferme sans demander a l'utilisteur de changer le nom
        ! si aucune ig existant alors ne fait rien et previent utilisateur

    - symv id/imagename
        > effectue une symétrie verticale de l'image pixel par pixel
        ! si l'id ou imagename ne correspond a rien, ne fait rien et previent utilisateur

    - symh id/imagename
        > effectue une symétrie horizontal de l'image pixel par pixel
        ! si l'id ou imagename ne correspond a rien, ne fait rien et previent utilisateur

    - rotate id/imagename nbRotation
        > effectue nbRotation fois rotations sur id/imagename
        > si nbRotation > 0 rotation vers la droite
        > si nbRotation < 0 rotation vers la gauche
        > si nbRotation = 0, ne fait rien et quitte la fonction
        > simplifier nbRatation a modulo 4 ou recursivite jusqu'a 0
        > penser à modifier les données de l'objet image à l'echelle
        ! si l'id ou imagename ne correspond a rien, ne fait rien et previent utilisateur

    - drawzone id/imagename longeur largeur
        > ajoute / enleve des pixel
        > penser à modifier les données de l'objet image à l'echelle
        ! si l'id ou imagename ne correspond a rien, ne fait rien et previent utilisateur

    - resize id/imagename longeur largeur
        > penser à modifier les données de l'objet image à l'echelle
        > voir les fonctionnalité diponible sur sdl2
        ! si l'id ou imagename ne correspond a rien, ne fait rien et previent utilisateur

    - select id/imagename origineX origineY longeur largeur
        > recupere une region de l'image
        > propose a l'utilisateur de :
            - cut [color/rgb]
                > remplace la zone par du noir
                > si option alors remplace par color ou melange rgb
            - copy origineX origineY
                > copy la région dans une autre région
            - fill color/rgb
                > rempli la zonne avec color ou melange rgb
            - switch color1/rgb1 color2/rgb2 [tolerence(0-255)]
                > remplace dans la zone la color1 par color2
                > si option tolérence et premier argument rgb1
                    remplace dans la zone la color1, et les pixel quasi similaire par rapport a tolérence, par color2
            - negmod
                > mise en négatif pixel à pixel (255−r,255−v,255−b)
            - greymod
                > mise en gris pixel à pixel (255−r,255−v,255−b)
            - bwmode [rev]
                > prend la moyenne des couleur de la région
                > si en desous de la moyenne, noir
                > si au dessus de la moyenne, blanc
                > si option alors inversion des regle
            - exit
                > quite la région
        ! si l'id ou imagename ne correspond a rien, ne fait rien et previent utilisateur

    - select id/imagename
        > selection toute l'image t désactive la fonction copy
        ! si l'id ou imagename ne correspond a rien, ne fait rien et previent utilisateur

    - pick id/imagename x y
        > recupere la couleur du pixel xy en rgb

    - help [nom de fonction]
        > écrit de l'aide inspiré de ce fichier
        > si option uniquement la fonction ciblé




